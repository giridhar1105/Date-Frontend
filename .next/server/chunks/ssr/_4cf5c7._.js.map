{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/giridhar/projects/Date/Date-Frontend/app/Group/page.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst WebSocketClient = () => {\n  const [socket, setSocket] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    // Create WebSocket connection\n    const ws = new WebSocket('ws://localhost:8080');\n    \n    // Handle connection open event\n    ws.onopen = () => {\n      console.log('Connected to WebSocket server');\n      ws.send('Hello from the client!');\n    };\n\n    // Handle incoming messages from server\n    ws.onmessage = (event) => {\n      console.log('Message from server:', event.data);\n      setMessages((prevMessages) => [...prevMessages, event.data]);\n    };\n\n    // Handle WebSocket error event\n    ws.onerror = (event) => {\n      console.error('WebSocket error:', event);\n    };\n\n    // Handle WebSocket close event\n    ws.onclose = () => {\n      console.log('Disconnected from WebSocket server');\n    };\n\n    setSocket(ws);\n\n    // Clean up WebSocket connection when the component unmounts\n    return () => {\n      ws.close();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(message);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>WebSocket Client in Next.js</h1>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type a message...\"\n      />\n      <button onClick={sendMessage}>Send Message</button>\n\n      <h3>Messages from Server:</h3>\n      <ul>\n        {messages.map((msg, index) => (\n          <li key={index}>{msg}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketClient;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,kBAAkB;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,8BAA8B;QAC9B,MAAM,KAAK,IAAI,UAAU;QAEzB,+BAA+B;QAC/B,GAAG,MAAM,GAAG;YACV,QAAQ,GAAG,CAAC;YACZ,GAAG,IAAI,CAAC;QACV;QAEA,uCAAuC;QACvC,GAAG,SAAS,GAAG,CAAC;YACd,QAAQ,GAAG,CAAC,wBAAwB,MAAM,IAAI;YAC9C,YAAY,CAAC,eAAiB;uBAAI;oBAAc,MAAM,IAAI;iBAAC;QAC7D;QAEA,+BAA+B;QAC/B,GAAG,OAAO,GAAG,CAAC;YACZ,QAAQ,KAAK,CAAC,oBAAoB;QACpC;QAEA,+BAA+B;QAC/B,GAAG,OAAO,GAAG;YACX,QAAQ,GAAG,CAAC;QACd;QAEA,UAAU;QAEV,4DAA4D;QAC5D,OAAO;YACL,GAAG,KAAK;QACV;IACF,GAAG,EAAE;IAEL,MAAM,cAAc;QAClB,IAAI,UAAU,OAAO,UAAU,KAAK,UAAU,IAAI,EAAE;YAClD,OAAO,IAAI,CAAC;YACZ,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;gBAC1C,aAAY;;;;;;0BAEd,8OAAC;gBAAO,SAAS;0BAAa;;;;;;0BAE9B,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;0BACE,SAAS,GAAG,CAAC,CAAC,KAAK,sBAClB,8OAAC;kCAAgB;uBAAR;;;;;;;;;;;;;;;;AAKnB;uCAEe"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/giridhar/projects/Date/Date-Frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;wBAAAA,CAAY,OAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACZC,UAAU;;iBACVC,UAAU,EAAE;kBACd,QAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;;WACAC,UAAU;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}